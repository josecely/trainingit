<?php
/* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Library General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
*  Copyright  2007 Jose Antonio Cely Saidiza
*  Email jose.cely@gmail.com
*  Bogotá Colombia
****************************************************************************/

/*
Vars content

  `id` int(11)
  `Clase` tinyint(4) = 12
  `Grupo` smallint(6)
  `Subserie` int(11)
  `Fecha` int(11) -> Fecha Relacion
  `Genera` smallint(6) -> id generador del documento
  `Recibe` smallint(6) -> id recibe el documento
  `Impresiones` smallint(6)
  `BloqImpresion` binary(1)
  `Bloqueado` binary(1)
  `Var0` -> id del Actor - fabricante
  `Var1` -> Nro Servicio
  `Var5` -> Destino
  `Var8` -> observaciones
  `Var9` -> hay_Existencia (1 o 0)-> si hay o no existencia cuando hizo la solicitud
  `Contenido` text -> contenido de la forma "cantidad,idproducto,precioventa" ...
  `Ultimaimpresion` int(11) default NULL,
  `Ultimaedicion` int(11) default NULL,
  `Estado` tinyint(4) NOT NULL default '1',

*/
class doc_sol_parte extends documento {

	private $classid = 22;	// id del documento
		
	function __construct(){		// creo documento
		parent::__construct($this->classid);
	}


	public function seleccionadocumento($id){		// cargo documento
		if (parent::seleccionadocumento($id)) {
			return TRUE;
		} else {
			return FALSE;
		}
	}
	

	public function gettypesolicitud($id){		// regresa el tipo de sol_parte de un documento
		if (parent::seleccionadocumento($id)) {
			return  parent::getVar2();
		} else {
			return FALSE;
		}
	}
	
	// Este método reemplaza al viejo, imprime el documento html directamente en el navegador, usando el código generado por generarHtml()
	public function imprimirhtml($aumenta = TRUE){		// cargo documento
      global $db;
      echo $this->generarHtml();
   }
   
   // Método para generar el documento html, guardándolo en un acadena de texto para poder reusarlo, lo hago para reemplazar la impresión directa en el navegador
	public function generarHtml($aumenta = TRUE){		// cargo documento
      global $db;
                
		//if (parent::generarHtml($aumenta))
		//{
			// contenido
			$tdborder = $this->styleborder;
			$html = parent::generarHtml();
			$html.="\n<table align=\"center\" class=\"".$this->styletable."\">\n"; // encabezado tabla"

			$html.="<tr class=\"$this->stylecontent\">";
			$html.="<td class=\"$tdborder\"><div class=\"$this->titlessmall\">Servicio</div></td>";                        
			$html.="<td class=\"$tdborder\"><div class=\"$this->titlessmall\">CodBarras</div></td>";
			$html.="<td class=\"$tdborder\"><div class=\"$this->titlessmall\">Nombre</div></td>";			
			$html.="<td class=\"$tdborder\"><div class=\"$this->titlessmall\">QTY</div></td>";
			$html.="<td class=\"$tdborder\"><div class=\"$this->titlessmall\">Disp</div></td>";
			$html.="<td class=\"$tdborder\"><div class=\"$this->titlessmall\">Destinatario</div></td>";
			$html.="<td class=\"$tdborder\"><div class=\"$this->titlessmall\">Notas</div></td>";
			$html.="</tr>\n";
                        
                        if ($xml = simplexml_load_string($this->Contenido))
                        {
                                foreach ($xml->item as $item)
                                {
                                		$destinatario=$db->get_row("SELECT Nombre1, Nombre2 FROM Actor WHERE id = '".$item->destinatario."'");
                                    $html.="<tr class=\"$this->stylecontent\">";
                                    $html.="<td><div align=\"left\">$item->servicio</div></td>";
                                    $html.="<td><div align=\"left\">$item->codigobarra</div></td>";
                                    $html.="<td><div align=\"left\">$item->nombre</div></td>";
                                    $html.="<td><div align=\"left\">$item->cantidad</div></td>";
                                    $html.="<td><div align=\"left\">$item->hay_existencias</div></td>";
                                    $html.="<td><div align=\"left\">$destinatario->Nombre1 $destinatario->Nombre2 </div></td>";
                                    $html.="<td><div align=\"left\">$item->notas</div></td>";
                                    $html.="</tr>\n";				
                                }
                        }
         $numcols=$numcols+2;
			$html.="<tr class=\"$this->stylecontent\">";
			$html.="<td colspan=\"10\"><div align=\"left\"><b>Notas:</b><br>$this->Var8</div></td>";
			$html.="</tr>\n";                        
			$html.="</table>\n";
			// Cierre del doc en html
         $elaboro=$db->get_row("SELECT Nombre1, Nombre2 FROM Actor WHERE id = '".$this->Var1."'");
			$html.="\n<table class=\"".$this->styletable."\">\n"; // encabezado tabla
			$html.="<tr class=\"$this->stylefoother\">";
			$html.="<td class=\"$tdborder\"><b>REALIZO:</b> $elaboro->Nombre1 $elaboro->Nombre2</td>";
			$html.="</tr>\n";
			$html.="</table>\n";
			if ($this->PieSmall!='') {
				$html.="<table class=\"".$this->styletable."\">\n"; 
				$html.="<tr class=\"$this->stylefoother\">";
				$html.="$this->PieSmall";
				$html.="</tr>\n";
			}	
			$html.="</table>\n";
			if ($this->Estadisticas) {
				$html.="";
			}
			// poner siempre este div a lcerrar el documento
			$html.="</div>\n";		
			return $html;
		/*} else {
			return FALSE;
		}*/
	}

	public function imprimirpdf($aumenta = TRUE){		// cargo documento
		if (parent::imprimirpdf($aumenta)) {
			// contenido
			$this->pdf->Ln(); //salto de linea
			$this->pdf->SetFillColor(230,230,230); // relleno gris
		
			$this->pdf->SetFont('Arial','B',10);
			// ancho de las columnas 196mm es el ancho total
			$w=array(17,114,30,35);
			// titulos
			$header=array('Cantidad','Descripcion','Vr Unitario','TOTAL');
				for($i=0;$i<count($header);$i++){
				$this->pdf->Cell($w[$i],7,$header[$i],1,0,'C',1);
			}
			
			$this->pdf->Ln(8);
			$this->pdf->SetFont('Arial','',8);		
			$infoprods = explode ('||', $this->Contenido);
			foreach ($infoprods as $infoprod) {
				$producto = explode (',', $infoprod);
				$total=$producto[0]*$producto[2];

				$header=array(''.$producto[0].'',''.$producto[1].' df fds sdf df df ','$ '.$producto[2].'','$ '.$total.'');
				for($i=0;$i<count($header);$i++){
					if ($i<2) {
						$this->pdf->Cell($w[$i],7,$header[$i],0,0,'L',1);
					} else {
						$this->pdf->Cell($w[$i],7,$header[$i],0,0,'R',1);					
					}
				}
				$this->pdf->Ln();
			}
			$IVA=$this->Var1-$this->Var2;
			$this->pdf->Ln(1);
			$this->pdf->SetX(141);
			$this->pdf->Cell(30,7,'Subtotal',1,0,'C',1);
			$this->pdf->Cell(35,7,$this->Var2,1,0,'C',1);				
			$this->pdf->Ln();
			$this->pdf->SetX(141);
			$this->pdf->Cell(30,7,'IVA',1,0,'C',1);
			$this->pdf->Cell(35,7,$IVA,1,0,'C',1);	
			$this->pdf->Ln();		
			$this->pdf->SetX(141);
			$this->pdf->Cell(30,7,'TOTAL',1,0,'C',1);
			$this->pdf->Cell(35,7,$this->Var1,1,0,'C',1);
			$this->pdf->Ln();
			$this->pdf->SetFillColor(252,239,128); // relleno amarillo
			$this->pdf->Ln(1);
							
			if ($this->Pie!='') {
				$this->pdf->SetFont('Arial','',8);
				$this->pdf->Cell(0,4,$this->Pie,1,1,'C',1);
				$this->pdf->Ln(1);
			}
			
			$this->pdf->Cell(95,30,'',1,0,'',1);
			$this->pdf->Cell(6,30,'','LR',0,'',1);		
			$this->pdf->Cell(95,30,'',1,0,'',1);
			$this->pdf->SetX(0);
			$this->pdf->Ln(2.5);							
			$this->pdf->Cell(95,0,'Aceptada:',0,0,'C');
			$this->pdf->Cell(6,0,'',0,0,'C');		
			$this->pdf->Cell(95,0,'Atentamente:',0,0,'C');	
			
			$this->pdf->Output('factura_'.$this->Subserie.'.pdf','D');		
			
			return TRUE;
		} else {
			return FALSE;
		}
	}
				
	public function creardocumento($Grupo,$productos,$Genera,$Recibe, $fabricante, $servicio, $destino, $notas){
		global $db;
		if (parent::creardocumento(0,$productos,$Genera,$Recibe)){	// cargo los productos en contenido
                        $sql = "INSERT INTO `Documento` (Grupo, Clase, Subserie, Fecha, Genera, Recibe, Var0, Var1, Var5, Var6, Contenido) VALUES ('$this->Grupo', '$this->Clase', '$this->Subserie', '$this->Fecha', '$this->Genera', '$this->Recibe', '$fabricante', '$servicio', '$destino', '$notas', '$this->Contenido')";
                        if ($db->query($sql)) {
                                if (parent::seleccionadocumento($this->id)) {
                                        return $this->id;
                                } else {
                                        return FALSE;
                                }
                        } else {
                                return FALSE;
                        }
                } else {
                        return FALSE;
                }
	}
}

?>
